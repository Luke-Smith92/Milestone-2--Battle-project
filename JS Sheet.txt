c// --- your existing data & variables ---

let playerCard, aiCard;
let playerHp, aiHp;
let interval;
let isPaused = false;

// --- existing DOM refs ---
const startBtn = document.getElementById("startBtn");
const cardSelection = document.getElementById("cardSelection");
const playerCardsDiv = document.getElementById("playerCards");
const battleResult = document.getElementById("battleResult");
const resultText = document.getElementById("resultText");
const playerZone = document.getElementById("playerZone");
const aiZone = document.getElementById("aiZone");

// NEW: store controls
const storeDiv = document.getElementById("store");
const storeCardsDiv = document.getElementById("storeCards");
const storeBtn = document.getElementById("storeBtn");           // top-right in battle
const backToBattleBtn = document.getElementById("backToBattleBtn");

startBtn.onclick = () => {
  startBtn.style.display = "none";
  storeDiv.classList.add("hidden");      // ensure store not visible
  cardSelection.classList.remove("hidden");
  displayCards();
};

// Visit Store (from battle)
storeBtn.onclick = () => {
  pauseBattle();                         // pause the fight
  battleResult.classList.add("hidden");
  storeDiv.classList.remove("hidden");
  openStore();
};

// Back to battle (from store)
backToBattleBtn.onclick = () => {
  storeDiv.classList.add("hidden");
  battleResult.classList.remove("hidden");
  resumeBattle();
};

function displayCards() {
  playerCardsDiv.innerHTML = "";
  pokemonCards.forEach((card, index) => {
    const div = document.createElement("div");
    div.className = "card";
    div.innerHTML = `
      <h3>${card.name}</h3>
      <img src="${card.img}" width="100" />
      <p>HP: ${card.hp}</p>
      <p>Attack: ${card.attack}</p>
    `;
    div.onclick = () => startBattle(index);
    playerCardsDiv.appendChild(div);
  });
}

function startBattle(playerIndex) {
  playerCard = { ...pokemonCards[playerIndex] };
  const aiIndex = Math.floor(Math.random() * pokemonCards.length);
  aiCard = { ...pokemonCards[aiIndex] };
  playerHp = playerCard.hp;
  aiHp = aiCard.hp;

  cardSelection.classList.add("hidden");
  battleResult.classList.remove("hidden");

  setBattleBackground();                 // << call the dynamic background
  renderBattleCards();
  updateHpBars();
  startTurnLoop();
}

function renderBattleCards() {
  playerZone.innerHTML = `
    <div class="card">
      <h3>You</h3>
      <img src="${playerCard.img}" width="100" />
      <p>${playerCard.name}</p>
      <div class="hp-bar"><div id="playerHpBar" class="hp-fill"></div></div>
    </div>
  `;
  aiZone.innerHTML = `
    <div class="card">
      <h3>AI</h3>
      <img src="${aiCard.img}" width="100" />
      <p>${aiCard.name}</p>
      <div class="hp-bar"><div id="aiHpBar" class="hp-fill"></div></div>
    </div>
  `;
}

function updateHpBars() {
  document.getElementById("playerHpBar").style.width = `${(playerHp / playerCard.hp) * 100}%`;
  document.getElementById("aiHpBar").style.width = `${(aiHp / aiCard.hp) * 100}%`;
}

function startTurnLoop() {
  let turn = 1;
  isPaused = false;

  clearInterval(interval);
  interval = setInterval(() => {
    if (isPaused) return; // do nothing while paused

    if (turn % 2 === 1) {
      aiHp -= playerCard.attack;
      if (aiHp < 0) aiHp = 0;
    } else {
      playerHp -= aiCard.attack;
      if (playerHp < 0) playerHp = 0;
    }

    updateHpBars();

    if (playerHp <= 0 || aiHp <= 0) {
      clearInterval(interval);
      if (playerHp <= 0 && aiHp <= 0) resultText.textContent = "It's a draw!";
      else if (playerHp <= 0)         resultText.textContent = "You lose!";
      else                            resultText.textContent = "You win!";
    }
    turn++;
  }, 1000);
}

function pauseBattle()  { isPaused = true; }
function resumeBattle() { isPaused = false; }

function resetGame() {
  clearInterval(interval);
  resultText.textContent = "";
  playerZone.innerHTML = "";
  aiZone.innerHTML = "";
  battleResult.classList.add("hidden");
  storeDiv.classList.add("hidden");
  startBtn.style.display = "block";
}

function setBattleBackground() {
  const backgrounds = [
    "url('https://wallpaperaccess.com/full/13407.jpg')", // Forest
    "url('https://wallpaperaccess.com/full/13402.jpg')", // Fire Cave
    "url('https://wallpaperaccess.com/full/13398.jpg')"  // Water Arena
  ];
  const randomBg = backgrounds[Math.floor(Math.random() * backgrounds.length)];
  document.body.style.backgroundImage = randomBg;
  document.body.style.backgroundSize = "cover";
  document.body.style.backgroundPosition = "center";
}

function openStore() {
  storeCardsDiv.innerHTML = "";
  pokemonCards.forEach(card => {
    const div = document.createElement("div");
    div.className = "card";
    div.innerHTML = `
      <h3>${card.name}</h3>
      <img src="${card.img}" width="100" />
      <p>HP: ${card.hp}</p>
      <p>Attack: ${card.attack}</p>
      <button>Buy</button>
    `;
    div.querySelector("button").onclick = () => alert(`${card.name} purchased!`);
    storeCardsDiv.appendChild(div);
  });
}
